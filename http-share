#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import os
import psutil
import SimpleHTTPServer
import SocketServer

def parse_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '--port',
        '-p',
        default='8080',
        action='store'
    )
    parser.add_argument(
        '--dir',
        '-d',
        default='',
        action='store',
        help='reltive path to share'
    )
    parser.add_argument(
        '--interface',
        '-i',
        default='',
        action='store',
        help='set interface to listen on. Listen on all interfaces by default'
    )
    arguments = parser.parse_args()
    return arguments

def get_iface_ips(port, interface):
    if interface == '':
        for iface, cfg in psutil.net_if_addrs().items():
            print('http://{}:{}'.format(cfg[0].address, port))
    else:
        print('http://{}:{}'.format(interface, port))

def main(args):
    share = os.path.join(os.getcwd(), args.dir)
    os.chdir(share)

    port = int(args.port)
    handler = SimpleHTTPServer.SimpleHTTPRequestHandler
    httpd = SocketServer.TCPServer((args.interface, port), handler)

    get_iface_ips(port, args.interface)

    httpd.serve_forever()

if __name__ == '__main__':
    args = parse_arguments()
    main(args)

